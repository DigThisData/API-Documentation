{
  "swagger": "3.0",
  "servers": [
    {
      "url": "https://devapi.digthisdata.com",
      "description": "Dev server"
    },
    {
      "url": "https://api.digthisdata.com",
      "description": "Production server"
    }
  ],
  "info": {
    "title": "DTD API Documentation",
    "version": "0.1",
    "description": "DigThisData API Documentation",
    "contact": {
      "name": "DTD Support",
      "url": "https://support.digthisdata.com",
      "email": "support@digthisdata.com"
    },
    "termsOfService": "https://app.digthisdata.com/terms-of-service"
  },
  "securityDefinitions": {
    "jwt": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "jwt": []
    }
  ],
  "tags": [],
  "paths": {
    "/app": {
      "post": {
        "summary": "Get JWT using DTD credentials (Key/Token)",
        "operationId": "postApp",
        "description": "Gets JWT token",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DTD%20Credentials"
            }
          }
        ],
        "tags": [
          "app"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        },
        "x-internal": false
      }
    },
    "/products": {
      "get": {
        "summary": "Retrieves a list of product for the account",
        "operationId": "getProducts",
        "description": "Products will only be listed if they are set up in a DTD account's Direct Products listing and have a warehouse listing in the D2C Warehouse",
        "tags": [
          "products"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/app/reset": {
      "get": {
        "summary": "Resets DTD table as if integration is not installed, but key and token remain.",
        "operationId": "getAppReset",
        "description": "For testing only",
        "tags": [
          "app"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        },
        "x-internal": true
      }
    },
    "/app/status": {
      "post": {
        "summary": "Get integration status",
        "operationId": "postAppStatus",
        "description": "Returns valid JWT token if exists",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Integration%20Credentials"
            }
          }
        ],
        "tags": [
          "app"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/app/activate": {
      "put": {
        "summary": "Activates/Deactivates Integration",
        "operationId": "putAppActivate",
        "description": "Enable or disable Integrated App",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Activation"
            }
          }
        ],
        "tags": [
          "app"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        },
        "x-internal": true
      }
    },
    "/app/set": {
      "put": {
        "summary": "Sets the Store ID into DTD database",
        "operationId": "putAppSet",
        "description": "Installs integrations into the DTD platform. Type indicates the integration type. 0 = Shopify.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Integration"
            }
          }
        ],
        "tags": [
          "app"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        },
        "x-internal": true
      }
    }
  },
  "definitions": {
    "DTD Credentials": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "minLength": 30,
          "maxLength": 35
        },
        "token": {
          "type": "string",
          "minLength": 30,
          "maxLength": 40
        }
      },
      "required": [
        "key",
        "token"
      ]
    },
    "Integration Credentials": {
      "type": "object",
      "properties": {
        "integration_id": {
          "type": "string",
          "description": "An identifier unique to the client platform",
          "minLength": 6,
          "maxLength": 40
        },
        "name": {
          "type": "string",
          "description": "The name of your integration application",
          "minLength": 5,
          "maxLength": 145
        },
        "domainname": {
          "type": "string",
          "description": "The domain name that the integration originates from",
          "minLength": 7,
          "maxLength": 245
        }
      },
      "required": [
        "integration_id",
        "name",
        "domainname"
      ]
    },
    "Activation": {
      "type": "object",
      "properties": {
        "active": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        }
      }
    },
    "Integration": {
      "type": "object",
      "properties": {
        "integration_id": {
          "type": "string",
          "minLength": 6,
          "maxLength": 40
        },
        "type": {
          "type": "number",
          "minimum": 0,
          "maximum": 10
        }
      },
      "required": [
        "integration_id"
      ]
    }
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ]
}